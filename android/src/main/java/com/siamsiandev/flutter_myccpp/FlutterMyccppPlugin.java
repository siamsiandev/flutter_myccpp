package com.siamsiandev.flutter_myccpp;

import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.MethodChannel.MethodCallHandler;
import io.flutter.plugin.common.MethodChannel.Result;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import com.ccpp.my2c2psdk.cores.*;
/** FlutterMyccppPlugin */
public class FlutterMyccppPlugin implements MethodCallHandler {
  /** Plugin registration. */
  private final String PRIVATE_KEY = "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";
  private My2c2pSDK sdk;
  public static void registerWith(Registrar registrar) {
    final MethodChannel channel = new MethodChannel(registrar.messenger(), "flutter_myccpp");
    channel.setMethodCallHandler(new FlutterMyccppPlugin());
  }

  @Override
  public void onMethodCall(MethodCall call, Result result) {
    if (call.method.equals("getPlatformVersion")) {
      result.success("Android " + android.os.Build.VERSION.RELEASE);
    } else if(call.method.equals("initialize")) {
      String privateKey = call.argument("privateKey");
      boolean productionMode = call.argument("productionMode");
      setup(privateKey, productionMode);
    }else {
      result.notImplemented();
    }
  }
  public void setup(String privateKey, boolean productionMode) {
    My2c2pSDK sdk = new My2c2pSDK(privateKey);
    sdk.version = "9.1";
    sdk.productionMode = productionMode;
  }
  private void sendRequest() {

  }
}
